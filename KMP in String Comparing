//KMP

#include <stdio.h>
#include <stdlib.h>
#include <string.h>


//先把最重要的NEXT[N]设置一个函数构造出来
void getNext(char*T, int *next)
{

    int i = 1;
    int j = 0;
    next[1]= 0;
    while(j<strlen(T))
    {
        if(j==0 || T[i]==T[j])
        {
            i++;
            j++;
            next[i]= j;
        }
        else
            j = next[j]; //这行是个重难点，重要的是理解next[]数组的意义，则可将其利用来回溯。
    }
    for(i=1;i<=strlen(T);i++)//输出next[]值
        printf("%d\n",next[i]);
}

//在设置一个大的KMP函数
int KMP_Index(char *S, char * T,int *next)
{
    int i , j ;
    i = 1;
    j = 0;
    getNext(T,next);

    while(i < strlen(S) && j < strlen(T))
    {
        if(j == 0 || S[i] == T[j])
        {
            i++;
            j++;
        }
        else
            j = next[j];
    }
    if(j >= strlen(T))
        return i - strlen(T);
    else
        return 0;
}



int main()
{
    /*
    printf("Input string S: ");
    scanf("%s", S);
    printf("Input string T: ");
    scanf("%s", T);
    */


    char S[]= "ABCDE";
    char T[]= "CD";

    int Next[10];
    int m;
    for(m=0;m<10;m++)
        Next[m]=0;


    printf("字符串T在字符串S中首次出现的位置%d\n",KMP_Index(S,T, Next));
    return 0;
}
